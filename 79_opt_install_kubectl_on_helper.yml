# This Playbook creates an in-memory inventory consisting of all master nodes
# that will be used in the subsequent play
#
# ASSUMPTIONS:
# Will make use of sudo password in the configs/password.yml in clear text
#

- name: Creating in-memory inventory for k8s masters
  hosts: localhost
  gather_facts: no
  become: no
  vars_files:
    - 'configs/password.yml'
    - 'configs/cloudinit-config.yml'

  vars:
    ansible_become_password: "{{ sudo_password }}"

  tasks:
    - name: Adding controlplane hosts to group 
      add_host:
        name: '{{ item.value.vm_static_ip }}'
        groups: masters
        ansible_user: '{{ ssh_user_name }}'
      loop: "{{ lookup('dict',cloud_vms_info, wantlist=True) }}"
      when: item.key | regex_search('(master|worker)') in ['master']
      loop_control:
        label: output



- name: Fetching kubeconfig from primary master
  hosts: '{{ groups.masters[0] }}'
  gather_facts: no
  become: yes
  vars:
    calico_env: '            - name: CALICO_IPV4POOL_CIDR'
    calico_ip: '              value: "{{ pod_nw_cidr }}"'
    ansible_ssh_private_key_file: ./do-not-delete/ansible_vms_rsa

  vars_files:
    - 'configs/password.yml'
    - 'configs/k8s-config.yml'
  tasks:
    - name: Fetching kubeconfig from master to host
      fetch:
        src: /root/.kube/config
        dest: /tmp/config
        flat: yes



- name: Creating in-memory inventory for utility
  hosts: localhost
  gather_facts: no
  become: no
  vars_files:
    - 'configs/password.yml'
    - 'configs/cloudinit-config.yml'

  vars:
    ansible_become_password: "{{ sudo_password }}"

  tasks:
    - name: Adding utility hosts to group
      add_host:
        name: '{{ item.value.vm_static_ip }}'
        groups: helper
        ansible_user: '{{ ssh_user_name }}'
      loop: "{{ lookup('dict',cloud_vms_info, wantlist=True) }}"
      when: item.key == 'utility'
      loop_control:
        label: output


- name: Setting up kubectl on utility VM
  hosts: helper
  gather_facts: no
  vars_files:
    - 'configs/password.yml'
    - 'configs/k8s-config.yml'

  vars:
    ansible_ssh_private_key_file: ./do-not-delete/ansible_vms_rsa

  tasks:

    - name: Create the ~/.kube folder
      file:
        path: /root/.kube
        state: directory

    - name: Copying kubeconfig resource to helper
      copy:
        src: /tmp/config
        dest: /root/.kube/
        mode: '0644'

    - name: Delete kubeconfig from host
      file:
        path: /tmp/config
        state: absent
      become: no
      delegate_to: localhost

    - name: Setting Environment variable for k8s access
      lineinfile:
        path: ~/.bashrc
        line: KUBECONFIG=$HOME/.kube/config
        create: yes
        mode: '0644'

    - name: Add k8s repositories to utility VM
      yum_repository:
        name: kubernetes
        description: Kubernetes package repository
        file: kubernetes
        baseurl: https://pkgs.k8s.io/core:/stable:/v{{ k8s_repo_version }}/rpm/
        enabled: yes
        gpgcheck: yes
        gpgkey: https://pkgs.k8s.io/core:/stable:/v{{ k8s_repo_version}}/rpm/repodata/repomd.xml.key
        repo_gpgcheck: yes
        exclude: 'kubelet kubeadm kubectl cri-tools kubernetes-cni'
        state: present

    - name: Installing the kubectl cli on utility VM
      yum:
        name: 
          - kubectl-{{ k8s_package_version }}
          - wget
        state: installed
        disable_excludes: kubernetes

    - name: Updating application-list.readme
      lineinfile:
        line: '[x] kubectl was setup on Helper node (Utility VM)'
        path: cluster-info.readme
        create: yes
      become: no
      delegate_to: localhost
